library ieee; 
use ieee.std_logic_1164.all; 
use ieee.numeric_std.all; 

entity Memoria_Imagen is

	generic (
		data_width  : natural := 8; 
	   addr_length : natural := 10	-- 1024 pos mem
		); 
	
	port ( 
		clk      :  in std_logic;
--		rst : in std_logic;
		address  :  in std_logic_vector(addr_length-1 downto 0); 
		data_out :  out std_logic_vector(data_width-1  downto 0) 
		);
		
end Memoria_Imagen;


architecture synth of Memoria_Imagen is

	constant mem_size : natural := 2**addr_length; 	
	type mem_type is array (0 to mem_size-1) of std_logic_vector (data_width-1 downto 0); 

constant mem : mem_type := (
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"02", x"00", x"04", x"04", x"03", x"06", x"00", x"01", x"00", x"03", x"00", x"00", x"00", x"00", x"01",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"03", x"00", x"02", x"02", x"01", x"05", x"02", x"03", x"03", x"00", x"02", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"05", x"01", x"02", x"08", x"04", x"03", x"08", x"00", x"08", x"00", x"00", x"00", x"00", x"01", x"03",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"02", x"00", x"02", x"0b", x"02", x"05", x"02", x"00", x"01", x"02", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"04", x"03", x"00", x"04", x"05", x"04", x"00", x"03", x"03", x"03", x"00", x"00", x"01", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"02", x"06", x"03", x"05", x"08", x"17", x"3d", x"4c", x"4e", x"1d", x"04", x"02", x"01", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"1a", x"37", x"69", x"b7", x"f7", x"dc", x"64", x"11", x"02", x"02", x"00", x"02",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"08", x"45", x"aa", x"e7", x"ff", x"f1", x"de", x"82", x"28", x"00", x"01", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"00", x"00", x"01", x"00", x"00", x"00", x"08", x"41", x"a6", x"f9", x"fd", x"f9", x"fc", x"dd", x"46", x"03", x"01", x"01", x"00", x"02",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"04", x"04", x"02", x"00", x"02", x"03", x"01", x"00", x"06", x"6a", x"d3", x"fd", x"fa", x"fa", x"fa", x"66", x"16", x"02", x"00", x"00", x"06", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"02", x"00", x"00", x"00", x"03", x"06", x"0c", x"03", x"03", x"42", x"8e", x"d0", x"f3", x"fc", x"ea", x"89", x"52", x"17", x"0b", x"01", x"01", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"05", x"06", x"03", x"00", x"03", x"06", x"00", x"05", x"73", x"dc", x"f6", x"fa", x"f3", x"c2", x"36", x"0d", x"01", x"00", x"02", x"00", x"00", x"01", x"01",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"08", x"05", x"00", x"05", x"0c", x"3b", x"53", x"ad", x"e8", x"fa", x"f7", x"e5", x"9a", x"1f", x"06", x"07", x"04", x"00", x"03", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"04", x"00", x"07", x"08", x"04", x"06", x"21", x"9d", x"bf", x"f1", x"f8", x"f8", x"de", x"9e", x"5b", x"07", x"02", x"03", x"01", x"00", x"01", x"00", x"00", x"02",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"06", x"06", x"01", x"11", x"4d", x"c9", x"f3", x"f6", x"fc", x"f1", x"91", x"1a", x"12", x"00", x"00", x"0c", x"05", x"01", x"00", x"02", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"07", x"00", x"01", x"15", x"58", x"b2", x"ee", x"fe", x"fb", x"eb", x"dd", x"84", x"0e", x"00", x"05", x"02", x"00", x"05", x"02", x"00", x"02", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"0e", x"4f", x"b5", x"f8", x"f6", x"fe", x"d7", x"aa", x"5f", x"18", x"02", x"07", x"00", x"03", x"02", x"01", x"00", x"01", x"01", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"00", x"00", x"21", x"7e", x"e9", x"fb", x"fb", x"ff", x"aa", x"48", x"11", x"08", x"01", x"00", x"08", x"01", x"01", x"01", x"01", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"0a", x"07", x"5d", x"c6", x"f9", x"fc", x"fb", x"e5", x"5e", x"13", x"00", x"00", x"02", x"00", x"05", x"00", x"01", x"02", x"01", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"09", x"00", x"84", x"f4", x"f5", x"f5", x"dc", x"67", x"1a", x"08", x"02", x"00", x"04", x"00", x"00", x"00", x"00", x"01", x"01", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"02", x"00", x"1b", x"a0", x"f8", x"fd", x"e9", x"84", x"09", x"01", x"00", x"00", x"00", x"00", x"01", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"5a", x"bf", x"f6", x"f7", x"d2", x"29", x"06", x"02", x"01", x"02", x"04", x"00", x"00", x"02", x"01", x"00", x"00", x"00", x"00", x"01", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"11", x"96", x"e9", x"f8", x"f2", x"c4", x"1e", x"05", x"03", x"01", x"00", x"01", x"03", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"63", x"cb", x"f7", x"fe", x"d4", x"5b", x"1a", x"0d", x"03", x"00", x"01", x"01", x"00", x"03", x"00", x"00", x"00", x"01", x"01", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"75", x"db", x"f7", x"f8", x"ce", x"50", x"03", x"04", x"00", x"00", x"01", x"00", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"7f", x"d0", x"f4", x"fd", x"cb", x"57", x"00", x"07", x"03", x"01", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"03", x"79", x"d6", x"f3", x"f5", x"ca", x"56", x"02", x"04", x"04", x"01", x"00", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"41", x"7f", x"bc", x"b2", x"6e", x"31", x"00", x"00", x"03", x"01", x"00", x"00", x"01", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"0f", x"18", x"55", x"4f", x"14", x"0f", x"03", x"00", x"03", x"02", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"02", x"03", x"0b", x"0c", x"03", x"00", x"03", x"00", x"01", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"05", x"08", x"04", x"03", x"02", x"00", x"00", x"03", x"00", x"00", x"00", x"00", x"00", x"01", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00",
		x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"01", x"00", x"07", x"08", x"02", x"00", x"05", x"00", x"0b", x"03", x"00", x"00", x"00", x"00", x"01", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00", x"00"
	);

	
begin 

	rom : process (clk) 
	begin
	   
----	   if (rising_edge(Clk)) then
--		  if rst = '1' then
--				-- Reset the counter to 0
--				data_out <= ((others=> '0'));
--		  end if;
	   
		if rising_edge(clk) then 
			data_out <= mem(to_integer(unsigned(address))); 
		end if; 
	end process rom; 

end architecture synth;